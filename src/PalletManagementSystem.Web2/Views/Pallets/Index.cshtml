@model PalletManagementSystem.Web2.ViewModels.Pallets.PalletListViewModel
@{
    ViewBag.Title = "Pallets";
}

<!-- Main Content -->
<div class="container-fluid mt-4">
    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <i class="fas fa-pallet mr-2"></i>Pallets
                </div>
                <div>
                    @if (Model.CanCreatePallet)
                    {
                        <a href="@Url.Action("Create", "Pallets")" class="btn btn-primary">
                            <i class="fas fa-plus mr-1"></i>New Pallet
                        </a>
                    }
                </div>
            </div>
        </div>
        <div class="card-body">
            <!-- Search Box -->
            <div class="row mb-4">
                <div class="col-md-6 col-lg-4">
                    @using (Html.BeginForm("Index", "Pallets", FormMethod.Get, new { @class = "search-container" }))
                    {
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="fas fa-search"></i>
                                </span>
                            </div>
                            @Html.TextBoxFor(m => m.SearchKeyword, new { @class = "form-control", placeholder = "Search by pallet number, order..." })
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-outline-secondary">Search</button>
                            </div>
                        </div>
                        <div class="search-results">
                            <!-- Will be populated by JavaScript -->
                        </div>
                    }
                </div>
                <div class="col-md-6 col-lg-8 text-right">
                    <div class="btn-group">
                        <a href="@Url.Action("Index", "Pallets", new { isClosed = "" })" class="btn btn-outline-primary @(Model.IsClosed == null ? "active" : "")">
                            <i class="fas fa-list mr-1"></i>All
                        </a>
                        <a href="@Url.Action("Index", "Pallets", new { isClosed = false })" class="btn btn-outline-primary @(Model.IsClosed == false ? "active" : "")">
                            <i class="fas fa-lock-open mr-1"></i>Open
                        </a>
                        <a href="@Url.Action("Index", "Pallets", new { isClosed = true })" class="btn btn-outline-primary @(Model.IsClosed == true ? "active" : "")">
                            <i class="fas fa-lock mr-1"></i>Closed
                        </a>
                    </div>
                </div>
            </div>

            @if (!Model.Pallets.Items.Any())
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle mr-2"></i>No pallets found matching your criteria.
                </div>
            }
            else
            {
                <!-- Pallets Table -->
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <a href="#" class="text-decoration-none text-dark">
                                        <i class="fas fa-sort mr-1"></i>Pallet Number
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-dark">
                                        <i class="fas fa-sort mr-1"></i>Manufacturing Order
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-dark">
                                        <i class="fas fa-sort mr-1"></i>Quantity
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-dark">
                                        <i class="fas fa-sort mr-1"></i>Items Count
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-dark">
                                        <i class="fas fa-sort mr-1"></i>Status
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-decoration-none text-dark">
                                        <i class="fas fa-sort mr-1"></i>Created Date
                                    </a>
                                </th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pallet in Model.Pallets.Items)
                            {
                                <tr>
                                    <td>@pallet.PalletNumber</td>
                                    <td>@pallet.ManufacturingOrder</td>
                                    <td>@pallet.Quantity @pallet.UnitOfMeasure</td>
                                    <td>@pallet.ItemCount</td>
                                    <td>
                                        @if (pallet.IsClosed)
                                        {
                                            <span class="badge badge-success">Closed</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-orange">Open</span>
                                        }
                                    </td>
                                    <td>@pallet.CreatedDate.ToString("MM/dd/yyyy")</td>
                                    <td>
                                        <a href="@Url.Action("Details", "Pallets", new { id = pallet.Id })" class="btn btn-sm btn-outline-primary" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("Print", "Pallets", new { id = pallet.Id })" class="btn btn-sm btn-outline-secondary" title="Print Pallet List">
                                            <i class="fas fa-print"></i>
                                        </a>
                                        @if (!pallet.IsClosed && Model.CanEdit)
                                        {
                                            <a href="@Url.Action("Edit", "Pallets", new { id = pallet.Id })" class="btn btn-sm btn-outline-warning" title="Edit Pallet">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("Close", "Pallets", new { id = pallet.Id })" class="btn btn-sm btn-outline-success" title="Close Pallet">
                                                <i class="fas fa-lock"></i>
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.Pallets.TotalPages > 1)
                {
                    <nav>
                        <ul class="pagination justify-content-center">
                            @if (Model.Pallets.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", "Pallets", new { page = Model.Pallets.PageNumber - 1, pageSize = Model.Pallets.PageSize, keyword = Model.SearchKeyword, isClosed = Model.IsClosed })">Previous</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.Pallets.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Pallets.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", "Pallets", new { page = i, pageSize = Model.Pallets.PageSize, keyword = Model.SearchKeyword, isClosed = Model.IsClosed })">@i</a>
                                </li>
                            }

                            @if (Model.Pallets.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", "Pallets", new { page = Model.Pallets.PageNumber + 1, pageSize = Model.Pallets.PageSize, keyword = Model.SearchKeyword, isClosed = Model.IsClosed })">Next</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <a class="page-link" href="#" tabindex="-1">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Demo script to show search results - IE11 compatible
        document.querySelector('.search-container input').addEventListener('focus', function() {
            document.querySelector('.search-results').classList.add('show');
        });

        document.addEventListener('click', function(e) {
            var searchContainer = document.querySelector('.search-container');
            if (!searchContainer.contains(e.target)) {
                document.querySelector('.search-results').classList.remove('show');
            }
        });

        // Sort handlers would be added here in a real implementation
        var sortLinks = document.querySelectorAll('th a');
        for (var i = 0; i < sortLinks.length; i++) {
            sortLinks[i].addEventListener('click', function(e) {
                e.preventDefault();
                // Sorting logic would be implemented here
                alert('Sorting by ' + this.textContent.trim());
            });
        }
    </script>
}