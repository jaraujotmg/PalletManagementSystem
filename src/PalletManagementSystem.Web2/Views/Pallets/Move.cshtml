@model PalletManagementSystem.Web2.ViewModels.Pallets.MovePalletItemViewModel

@{
    ViewBag.Title = "Move Item - " + Model.ItemNumber;
}

<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i> Home</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Pallets")"><i class="fa fa-pallet"></i> Pallets</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Details", "Pallets", new { id = Model.SourcePalletId })">@Model.SourcePalletNumber</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Details", "Items", new { id = Model.ItemId })">Item #@Model.ItemNumber</a></li>
        <li class="breadcrumb-item active" aria-current="page">Move Item</li>
    </ol>
</nav>

<!-- Move Header -->
<div class="move-header">
    <div class="row align-items-center">
        <div class="col-md-8">
            <h4><i class="fa fa-exchange-alt mr-2"></i>Move Item #@Model.ItemNumber</h4>
            <div class="mt-2">
                <span class="badge badge-secondary mr-2">Current Pallet: @Model.SourcePalletNumber</span>
                <span class="badge badge-orange">Open</span>
            </div>
        </div>
        <div class="col-md-4 text-md-right mt-3 mt-md-0">
            <a href="@Url.Action("Details", "Pallets", new { id = Model.SourcePalletId })" class="btn btn-secondary">
                <i class="fa fa-arrow-left mr-1"></i>Back
            </a>
        </div>
    </div>
</div>

<!-- Move Item Content -->
<div class="row">
    <div class="col-lg-4">
        <!-- Item Information -->
        <div class="card">
            <div class="card-header">
                <i class="fa fa-box mr-2"></i>Item Details
            </div>
            <div class="card-body">
                <div class="item-preview">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-2">
                                <span class="info-label">Item Number:</span>
                                <div>#@Model.ItemNumber</div>
                            </div>
                            <div class="mb-2">
                                <span class="info-label">Manufacturing Order:</span>
                                <div>@Model.Item.ManufacturingOrder</div>
                            </div>
                            <div class="mb-2">
                                <span class="info-label">Client:</span>
                                <div>@Model.Item.ClientName</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-2">
                                <span class="info-label">Reference:</span>
                                <div>@Model.Item.Reference</div>
                            </div>
                            <div class="mb-2">
                                <span class="info-label">Quantity:</span>
                                <div>@Model.Item.Quantity @Model.Item.QuantityUnit</div>
                            </div>
                            <div class="mb-2">
                                <span class="info-label">Weight:</span>
                                <div>@Model.Item.Weight @Model.Item.WeightUnit</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Source and Destination Display -->
                <div class="source-dest-container mt-4">
                    <div class="source-dest-box">
                        <div class="source-dest-title">Source Pallet</div>
                        <div class="source-dest-icon">
                            <i class="fa fa-pallet"></i>
                        </div>
                        <div class="fw-bold">@Model.SourcePalletNumber</div>
                        <div class="badge badge-orange">Open</div>
                    </div>
                    <div class="arrow-container">
                        <i class="fa fa-arrow-right"></i>
                    </div>
                    <div class="source-dest-box">
                        <div class="source-dest-title">Destination Pallet</div>
                        <div class="source-dest-icon">
                            <i class="fa fa-pallet"></i>
                        </div>
                        <div id="destPalletDisplay">No pallet selected</div>
                    </div>
                </div>

                <div class="alert alert-info mt-3">
                    <i class="fa fa-info-circle mr-2"></i>Moving this item will change its pallet assignment but won't change any other item properties.
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-8">
        <!-- Destination Pallet Selection -->
        <div class="card">
            <div class="card-header">
                <i class="fa fa-exchange-alt mr-2"></i>Select Destination Pallet
            </div>
            <div class="card-body">
                @using (Html.BeginForm("MoveItem", "Pallets", FormMethod.Post, new { id = "moveItemForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.ItemId)
                    @Html.HiddenFor(m => m.ItemNumber)
                    @Html.HiddenFor(m => m.SourcePalletId)
                    @Html.HiddenFor(m => m.SourcePalletNumber)

                    <div class="validation-summary-errors text-danger" style="display: @(ViewData.ModelState.IsValid ? "none" : "block")">
                        <ul>
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>

                    <!-- Filter and Search -->
                    <div class="filter-container">
                        <div class="row">
                            <div class="col-lg-10">
                                <div class="search-container">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                <i class="fa fa-search"></i>
                                            </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.SearchKeyword, new { @class = "form-control", placeholder = "Search by pallet number, order..." })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <button type="button" class="btn btn-outline-primary" id="filterButton">
                                    <i class="fa fa-filter mr-1"></i>Filter
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="alert alert-warning">
                        <i class="fa fa-exclamation-triangle mr-2"></i>Only open pallets are shown. Items cannot be moved to closed pallets.
                    </div>

                    <!-- Available Pallets -->
                    <div class="available-pallets">
                        @if (Model.AvailablePallets.Count == 0)
                        {
                            <div class="alert alert-info">
                                <i class="fa fa-info-circle mr-2"></i>No open pallets available for moving this item.
                            </div>
                        }
                        else
                        {
                            <div class="form-group" style="display: none;">
                                @Html.LabelFor(m => m.TargetPalletId, "Target Pallet")
                                @Html.DropDownListFor(m => m.TargetPalletId,
                                         Model.AvailablePallets.Select(p => new SelectListItem
                        {
                            Value = p.Id.ToString(),
                            Text = $"{p.PalletNumber} - {p.ManufacturingOrder}"
                        }),
                                         "-- Select a pallet --",
                                         new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.TargetPalletId, "", new { @class = "text-danger" })
                            </div>

                            foreach (var pallet in Model.AvailablePallets)
                            {
                                <div class="pallet-card" data-pallet-id="@pallet.Id" onclick="selectPallet(this, '@pallet.Id', '@pallet.PalletNumber', '@pallet.ManufacturingOrder')">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="pallet-card-title">@pallet.PalletNumber</div>
                                            <div class="pallet-card-subtitle">Manufacturing Order: @pallet.ManufacturingOrder</div>
                                        </div>
                                        <span class="badge badge-orange">Open</span>
                                    </div>
                                    <div class="pallet-card-info">
                                        <div class="pallet-info-item">
                                            <i class="fa fa-cube mr-1"></i>Items: @pallet.ItemCount
                                        </div>
                                        <div class="pallet-info-item">
                                            <i class="fa fa-weight mr-1"></i>@pallet.Quantity @pallet.UnitOfMeasure
                                        </div>
                                        <div class="pallet-info-item">
                                            <i class="fa fa-clock mr-1"></i>@pallet.CreatedDate.ToString("MMM dd, yyyy")
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <!-- Action Buttons -->
                    <div class="floating-buttons">
                        <div class="d-flex justify-content-between align-items-center">
                            <button type="button" class="btn btn-link text-decoration-none" data-toggle="modal" data-target="#newPalletModal">
                                <i class="fa fa-plus-circle mr-1"></i>Create New Pallet
                            </button>
                            <div>
                                <a href="@Url.Action("Details", "Pallets", new { id = Model.SourcePalletId })" class="btn btn-secondary mr-2">
                                    <i class="fa fa-times mr-1"></i>Cancel
                                </a>
                                <button type="submit" class="btn btn-primary" id="moveItemBtn" disabled>
                                    <i class="fa fa-exchange-alt mr-1"></i>Move Item
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- New Pallet Modal -->
<div class="modal fade" id="newPalletModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fa fa-plus-circle mr-2"></i>Create New Pallet</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="alert alert-info">This feature will be implemented in a future update.</p>
                <div class="form-group mb-3">
                    <label for="manufacturingOrder" class="form-label">Manufacturing Order</label>
                    <input type="text" class="form-control" id="manufacturingOrder" placeholder="Enter manufacturing order">
                </div>
                <div class="form-group mb-3">
                    <label for="unitOfMeasure" class="form-label">Unit of Measure</label>
                    <select class="form-control" id="unitOfMeasure">
                        <option value="PC">PC (Piece)</option>
                        <option value="KG">KG (Kilogram)</option>
                        <option value="BOX">BOX</option>
                        <option value="ROLL">ROLL</option>
                    </select>
                </div>
                <div class="custom-control custom-checkbox mb-3">
                    <input type="checkbox" class="custom-control-input" id="moveToNewPallet" checked>
                    <label class="custom-control-label" for="moveToNewPallet">
                        Move item #@Model.ItemNumber to this new pallet immediately
                    </label>
                </div>
                <div class="alert alert-info">
                    <i class="fa fa-info-circle mr-2"></i>The new pallet will be created with a temporary number. A permanent number will be assigned when the pallet is closed.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary">Create Pallet</button>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Modal -->
<div class="modal fade" id="confirmMoveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fa fa-exchange-alt mr-2"></i>Confirm Move</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to move item <strong>#@Model.ItemNumber</strong> from pallet <strong>@Model.SourcePalletNumber</strong> to pallet <strong id="confirmDestPallet"></strong>?</p>
                <div class="alert alert-warning">
                    <i class="fa fa-exclamation-triangle mr-2"></i>This action cannot be undone!
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmMoveBtn">Move Item</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Function to select a pallet
        function selectPallet(card, palletId, palletNumber, manufacturingOrder) {
            // Remove selection from all pallet cards
            var palletCards = document.querySelectorAll('.pallet-card');
            for (var i = 0; i < palletCards.length; i++) {
                palletCards[i].classList.remove('selected');
            }

            // Add selection to clicked card
            card.classList.add('selected');

            // Update destination pallet display
            var destPalletDisplay = document.getElementById('destPalletDisplay');
            destPalletDisplay.innerHTML =
                '<div class="font-weight-bold">' + palletNumber + '</div>' +
                '<div class="text-muted">' + manufacturingOrder + '</div>' +
                '<div class="badge badge-orange">Open</div>';

            // Update hidden input field
            document.getElementById('TargetPalletId').value = palletId;

            // Update confirmation modal
            document.getElementById('confirmDestPallet').textContent = palletNumber;

            // Enable move button
            document.getElementById('moveItemBtn').disabled = false;
        }

        // Handle move item button click
        document.getElementById('moveItemBtn').addEventListener('click', function(e) {
            e.preventDefault();

            // Check if a destination pallet is selected
            if (document.getElementById('TargetPalletId').value === '') {
                alert('Please select a destination pallet.');
                return;
            }

            // Show confirmation modal using jQuery for IE11 compatibility
            $('#confirmMoveModal').modal('show');
        });

        // Handle confirmation button click
        document.getElementById('confirmMoveBtn').addEventListener('click', function() {
            // Submit the form
            document.getElementById('moveItemForm').submit();
        });

        // Initialize search filter
        document.getElementById('filterButton').addEventListener('click', function() {
            var keyword = document.getElementById('SearchKeyword').value.toLowerCase();
            var palletCards = document.querySelectorAll('.pallet-card');

            for (var i = 0; i < palletCards.length; i++) {
                var title = palletCards[i].querySelector('.pallet-card-title').textContent.toLowerCase();
                var subtitle = palletCards[i].querySelector('.pallet-card-subtitle').textContent.toLowerCase();

                if (title.indexOf(keyword) !== -1 || subtitle.indexOf(keyword) !== -1) {
                    palletCards[i].style.display = 'block';
                } else {
                    palletCards[i].style.display = 'none';
                }
            }
        });

        // Clear filter when search box is cleared
        document.getElementById('SearchKeyword').addEventListener('keyup', function() {
            if (this.value === '') {
                var palletCards = document.querySelectorAll('.pallet-card');
                for (var i = 0; i < palletCards.length; i++) {
                    palletCards[i].style.display = 'block';
                }
            }
        });
    </script>
}

@section styles {
    <style>
        .move-header {
            background-color: #e6eef5;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

            .move-header h4 {
                color: #003366;
                margin-bottom: 0;
            }

        .item-preview {
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px;
            margin-top: 15px;
        }

        .info-label {
            font-weight: 500;
            color: #003366;
        }

        /* IE11 compatible source-dest container */
        .source-dest-container {
            display: table;
            width: 100%;
            table-layout: fixed;
            margin-bottom: 20px;
        }

        .source-dest-box {
            display: table-cell;
            width: 45%;
            border: 2px solid #e6eef5;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            vertical-align: middle;
        }

        .arrow-container {
            display: table-cell;
            width: 10%;
            text-align: center;
            vertical-align: middle;
            padding: 0 20px;
            font-size: 2rem;
            color: #003366;
        }

        .source-dest-title {
            font-weight: 600;
            margin-bottom: 10px;
            color: #003366;
        }

        .source-dest-icon {
            font-size: 2rem;
            color: #003366;
            margin-bottom: 10px;
        }

        .pallet-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            cursor: pointer;
            -webkit-transition: all 0.2s;
            transition: all 0.2s;
        }

            .pallet-card:hover {
                border-color: #003366;
                background-color: #e6eef5;
            }

            .pallet-card.selected {
                border-color: #003366;
                background-color: #e6eef5;
                -webkit-box-shadow: 0 0 0 2px #003366;
                box-shadow: 0 0 0 2px #003366;
            }

        .pallet-card-title {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .pallet-card-subtitle {
            color: #555;
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .pallet-card-info {
            display: table;
            width: 100%;
            margin-top: 10px;
        }

        .pallet-info-item {
            display: table-cell;
            width: 33.333%;
        }

        .floating-buttons {
            position: sticky;
            bottom: 0;
            background-color: white;
            padding: 15px;
            -webkit-box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
            border-top: 1px solid #eee;
            margin: 0 -20px -20px -20px;
            border-radius: 0 0 8px 8px;
        }

        .badge-orange {
            background-color: #f57c00;
            color: white;
        }

        .fw-bold {
            font-weight: bold;
        }
    </style>
}